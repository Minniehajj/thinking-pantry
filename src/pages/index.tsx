import type { NextPage } from "next";
import Head from "next/head";
import React from "react";
import { trpc } from "../utils/trpc";
import Link from "next/link";
import DynamicIngs from "./components/DynamicIngsSelect";
import GetCategoriesForOption from "./components/GetCategoryForOption";
import DynamicIngsIndex from "./components/DynamicIngsForIndex";

const Home: NextPage = () => {
  const utils = trpc.useContext();
  const mutateData = trpc.useMutation(["ingredient.createIngredient"], {
    async onSuccess() {
      await utils.invalidateQueries(["ingredient.getAll"]);
    },
  });

  const [name, setName] = React.useState("");
  const [quanity, setQuanity] = React.useState(Number);
  const [canBeUsedUp, setCanBeUsedUp] = React.useState(false);
  const [category, setCategory] = React.useState("Dairy");

  const submitForm = async () => {
    console.log(name, quanity, canBeUsedUp, category);

    const inputs = {
      name: name,
      quanity: quanity,
      canBeUsedUp: canBeUsedUp,
      category: category,
    };

    const returnState = mutateData.mutate({
      name,
      quanity,
      canBeUsedUp,
      category,
    });
  };

  return (
    <>
      <Head>
        <title>Thinking Pantry</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-screen min-h-screen flex flex-col justify-center items-center p-4 overflow-y-scroll m-auto">
        <form
          onSubmit={submitForm}
          className="w-full max-w-lg flex gap-2 flex-wrap"
        >
          <div className="flex items-center gap-2">
            {/* <input
              type="checkbox"
              className="border p-2"
              id="canBeUsedUp"
              name="canBeUsedUp"
              onChange={(e) => setCanBeUsedUp(e.target.checked)}
            /> */}
            <select onChange={(e) => {setCategory(e.target.value) }}>
              <GetCategoriesForOption />
            </select>
          </div>

          <DynamicIngsIndex
            category={category}
            ingredient={name}
            setIngredientEntry={setName}
          ></DynamicIngsIndex>

          {/* <input
            type="text"
            className="border p-2"
            name="Name"
            placeholder="Name"
            onChange={(e) => setName(e.target.value)}
          /> */}
          <input
            type="number"
            className="border p-2"
            name="Quantity"
            placeholder="Quantity"
            onChange={(e) => setQuanity(parseInt(e.target.value))}
          />

          <button type="submit" className="border p-2">
            Submit
          </button>
        </form>

        <div>
          <Link href="/ingredients">
            <a>List of Ingredients</a>
          </Link>

          <Link href="/recipes">
            <a>List of Currently possible recipes</a>
          </Link>
          <Link href="/AllRecipes">
            <a>List of All Recipes</a>
          </Link>
        </div>
        {/* <div> <ListOfIngredients /></div> */}
      </div>
    </>
  );
};

export default Home;
